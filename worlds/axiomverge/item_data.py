import typing as t
from dataclasses import dataclass

from BaseClasses import ItemClassification

from .constants import AVItemType, AP_ID_BASE


@dataclass
class AVItemData:
    id: int
    name: str
    group_name: str
    ap_classification: bool = False


raw_item_data: t.Tuple[AVItemData] = (
    ("DataDisruptor", AVItemType.WEAPON,
     ItemClassification.progression_skip_balancing),
    # (2, "DataGrenade", AVItemType.WEAPON),
    # (3, "FireWall", AVItemType.WEAPON),
    # (4, "InertialPulse", AVItemType.WEAPON),
    # (5, "IonBeam", AVItemType.WEAPON),
    # (6, "LightningGun", AVItemType.WEAPON),
    ("MultiDisruptor", AVItemType.WEAPON,
     ItemClassification.progression_skip_balancing),
    # (8, "Reflect", AVItemType.WEAPON),
    # (9, "Shards", AVItemType.WEAPON),
    # (10, "Swim", AVItemType.WEAPON),
    # (11, "TriCone", AVItemType.WEAPON),
    # (12, "Voranj", AVItemType.WEAPON),
    ("Nova", AVItemType.WEAPON, ItemClassification.progression),
    # (14, "TetheredCharge", AVItemType.WEAPON),
    # (15, "VerticalSpread", AVItemType.WEAPON),
    # (16, "WallTrace", AVItemType.WEAPON),
    # (17, "DistortionField", AVItemType.WEAPON),
    # (18, "FlameThrower", AVItemType.WEAPON),
    ("Kilver", AVItemType.WEAPON, ItemClassification.progression),
    # (20, "Scythe", AVItemType.WEAPON),
    # (21, "FatBeam", AVItemType.WEAPON),
    # (22, "HeatSeeker", AVItemType.WEAPON),
    # (23, "WebSlicer", AVItemType.WEAPON),
    # (24, "AddressDisruptor1", AVItemType.GLITCH, True),
    # (25, "AddressDisruptor2", AVItemType.GLITCH, True),
    ("Drill", AVItemType.DRILL, ItemClassification.progression),
    # (27, "DroneGun", AVItemType.DRONE, True),
    # (28, "GlitchBomb", AVItemType.GLITCH, True),
    # (29, "Grapple", AVItemType.MOVEMENT, True),
    # (30, "HighJump", AVItemType.MOVEMENT, True),
    # (31, "GlitchTeleport", AVItemType.COAT, True),
    # (32, "BlackCoat", AVItemType.COAT, True),
    # (33, "RedCoat", AVItemType.COAT, True),
    # (34, "BreachSuppressor", AVItemType.KEY, True),
    # (35, "EnhancedLaunch", AVItemType.DRONE, True),
    # (36, "DroneTeleport", AVItemType.DRONE, True),
    # (37, "PasswordTool", AVItemType.KEY, True),
    # (38, "TendrilsTop", AVItemType.TENDRILS),
    # (39, "TendrilsBottom", AVItemType.TENDRILS),
    ("HealthNode1", AVItemType.HEALTH_NODE, ItemClassification.useful),
    # ("HealthNode2", AVItemType.HEALTH_NODE),
    # ("HealthNode3", AVItemType.HEALTH_NODE),
    # ("HealthNode4", AVItemType.HEALTH_NODE),
    # ("HealthNode5", AVItemType.HEALTH_NODE),
    # ("HealthNode6", AVItemType.HEALTH_NODE),
    # ("HealthNode7", AVItemType.HEALTH_NODE),
    # ("HealthNode8", AVItemType.HEALTH_NODE),
    # ("HealthNode9", AVItemType.HEALTH_NODE),
    # ("HealthNode10", AVItemType.HEALTH_NODE),
    ("PowerNode1", AVItemType.POWER_NODE, ItemClassification.useful),
    # ("PowerNode2", AVItemType.POWER_NODE),
    # ("PowerNode3", AVItemType.POWER_NODE),
    # ("PowerNode4", AVItemType.POWER_NODE),
    # ("PowerNode5", AVItemType.POWER_NODE),
    # ("PowerNode6", AVItemType.POWER_NODE),
    # ("PowerNode7", AVItemType.POWER_NODE),
    # ("PowerNode8", AVItemType.POWER_NODE),
    ("HealthNodeFragment1", AVItemType.HEALTH_NODE_FRAGMENT,
     ItemClassification.useful),
    ("HealthNodeFragment2", AVItemType.HEALTH_NODE_FRAGMENT,
     ItemClassification.useful),
    # ("HealthNodeFragment3", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment4", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment5", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment6", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment7", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment8", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment9", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment10", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment11", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment12", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment13", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment14", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment15", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment16", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment17", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment18", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment19", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment20", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment21", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment22", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment23", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment24", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment25", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment26", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment27", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment28", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment29", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("HealthNodeFragment30", AVItemType.HEALTH_NODE_FRAGMENT),
    # ("PowerNodeFragment1", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment2", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment3", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment4", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment5", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment6", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment7", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment8", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment9", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment10", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment11", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment12", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment13", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment14", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment15", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment16", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment17", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment18", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment19", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment20", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment21", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment22", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment23", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment24", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment25", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment26", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment27", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment28", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment29", AVItemType.POWER_NODE_FRAGMENT),
    # ("PowerNodeFragment30", AVItemType.POWER_NODE_FRAGMENT),
    # ("RangeNode1", AVItemType.RANGE_NODE),
    # ("RangeNode2", AVItemType.RANGE_NODE),
    # ("RangeNode3", AVItemType.RANGE_NODE),
    # ("RangeNode4", AVItemType.RANGE_NODE),
    ("SizeNode1", AVItemType.SIZE_NODE, ItemClassification.useful),
    # ("SizeNode2", AVItemType.SIZE_NODE),
    # ("SizeNode3", AVItemType.SIZE_NODE),
    # ("SizeNode4", AVItemType.SIZE_NODE),
)

item_data: t.Dict[str, AVItemData] = {
    name: AVItemData(id, name, group_name, ap_classification)
    for id, (name, group_name, ap_classification) in enumerate(raw_item_data, AP_ID_BASE)
}
